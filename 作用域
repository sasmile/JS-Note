词法作用域：
查找作用域时找到第一个匹配的标识符便停止；
在多层嵌套的作用域中可以定义同名标识符，叫做”遮蔽效应“；
作用域查找始终从运行时所处的最内部作用域开始，逐级向外或向上进行，直到遇见第一个匹配的标识符为止；
全局变量会自动成为全局对象的属性，所以可以通过间接引用全局对象属性的方式对其访问，如：window.a；
函数的词法作用域只与函数被声明时所处的位置有关，与函数在哪里被调用，如何被调用无关；
欺骗词法：
  eval()和width，尽量避免使用；
  
函数作用域：
含义：属于这个函数的全部变量都可以在整个函数的范围内使用及复用；
最小授权/最小暴露原则：在软件设计中，应该最小限度的暴露必要内容，而将其他内容隐藏起来；

函数声明和函数表达式的区分：
 如果function是声明中的第一个词，则为函数声明，否则即为函数表达式；
 函数表达式可以匿名，但是函数声明不可以匿名；
 举例：
  function foo(){
   console.log(2);
  }  //<--函数声明，foo被绑定在所在作用域中，可以直接通过foo()调用；
  
  (function foo(){
   console.log(2);
  })(); //<--函数表达式，foo被绑定在函数表达式自身的函数中而不是在作用域中，外部作用域不能访问foo；
 
立即执行函数表达式（IIFE）：
 (function foo(){.....})();
 第一个()将函数变成函数表达式，第二个()表示执行了这个函数；
 最常见的用法是使用匿名函数表达式；
 (function foo(){.....}());效果同上；
